import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from PIL import Image
import pytesseract


pytesseract.pytesseract.tesseract_cmd = r"C:\Program Files\Tesseract-OCR\tesseract.exe"

API_TOKEN = ("7590491235:AAHmGbiv1dN2GZ86UR6l-UhjrQ01QJe7pOM")
logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

user_languages = {}

# /start
@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    user_languages[message.from_user.id] = "eng"
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º ‚Äî –∏ —è —Ä–∞—Å–ø–æ–∑–Ω–∞—é –µ–≥–æ üß†\n\n"
        "–Ø–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: English üá¨üáß\n"
        "–ß—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å —è–∑—ã–∫: /lang eng –∏–ª–∏ /lang rus"
    )

# /lang <–∫–æ–¥_—è–∑—ã–∫–∞>
@dp.message(Command("lang"))
async def change_language(message: types.Message):
    args = message.text.split()
    if len(args) == 2 and args[1] in ["eng", "rus"]:
        user_languages[message.from_user.id] = args[1]
        lang_name = "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π üá¨üáß" if args[1] == "eng" else "–†—É—Å—Å–∫–∏–π üá∑üá∫"
        await message.answer(f"üîÑ –Ø–∑—ã–∫ OCR —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {lang_name}")
    else:
        await message.answer("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: /lang eng –∏–ª–∏ /lang rus")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
@dp.message(lambda msg: msg.photo)
async def handle_photo(message: types.Message):
    photo = message.photo[-1]
    file = await bot.get_file(photo.file_id)
    downloaded = await bot.download_file(file.file_path)

    file_path = "temp.jpg"
    with open(file_path, "wb") as f:
        f.write(downloaded.read())

    lang = user_languages.get(message.from_user.id, "eng")

    try:
        image = Image.open(file_path)
        text = pytesseract.image_to_string(image, lang=lang)
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏: {e}")
        return
    finally:
        os.remove(file_path)

    if text.strip():
        await message.answer(f"üìù –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n\n{text}")
    else:
        await message.answer("üòï –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç.")

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    import asyncio
    asyncio.run(dp.start_polling(bot))
